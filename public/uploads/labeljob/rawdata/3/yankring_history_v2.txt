,V
- 标注完成一个task后可以点击finish按钮，改变task的状态为finished。,V
- 标注者点击task id后可以进入标注页面，对内容进行标注。每一个数据条目右侧对应了若干个label按钮，点击显示“Labelled as XXX”后即标注成功，若标注错误可在刷新页面后点击对应条目的Unlabel按钮取消原来的标注，再次刷新页面后即可重新标注；,V
- 标注者登录后即进入已经分配给自己的task页面，可以查看自己所有task当前的状态。当task所属的job已经由发布者approve之后将不再显示；,V
###标注者功能说明,V
- 在此版本中，管理员角色与发布者角色功能完全相同。,V
- task管理,V
- 在此版本中，job创建后会自动将上传的文件平均分配成若干个task给系统中所有的标注者每人一个。在改进版本中，发布者可以选择若干标注者来发布任务；,V
- 点击又上角的新建job按钮进入新建界面，填写job的名称、详细信息以及截止日期，Labels中输入需要标注的标签类型，不同的标签之间用“|”来间隔，形如“有|没有”、“A类|B类|C类”，上传的原始数据应以".txt"、".csv"、或".data"结尾，文件内容必须每一条数据占一行；,V
- 发布者登录后即进入自己发布job的管理界面，分别列出了未完成和已完成的jobs，发布者可以对已经发布的job进行删除和修改，对未完成的job进行approve操作将其变为已完成状态；,V
###发布者功能说明,V
  - 登录后左端的状态栏会显示其登入邮箱以及帐号角色类型。,V
  - 未登录的用户无法访问任何页面，游客对于任何资源的访问都会跳转到登录界面，登录用户可以修改自己的密码、邮箱，无法修改自己的帐号角色；,V
  - 注册页面做了加密，输入帐号密码（现设为labeller）后，进入注册页面。输入邮箱、密码、密码确认以及选择帐号角色类型（有管理员、发布者、标注者三种）后点击注册即创建成功；,V
###注册登录,V
****,V
Labeller第一版在设计上由于时间关系有些设计体验还不够好，基本可以执行标注任务。使用说明如下：,V
---------------,V
beller使用手册,V
- 标注者登录后即进入已经分配给自己的task页面，,V
labeller使用手册,V
# Labeller,V
Labeller第一版在设计上由于时间关系有些设计体验还不够好，基本可以执行标注任务。使用说明如下：****###注册登录  - 注册页面做了加密，输入帐号密码（现设为labeller）后，进入注册页面。输入邮箱、密码、密码确认以及选择帐号角色类型（有管理员、发布者、标注者三种）后点击注册即创建成功。  - 未登录的用户无法访问任何页面，游客对于任何资源的访问都会跳转到登录界面，登录用户可以修改自己的密码、邮箱，无法修改自己的帐号角色。  - 登录后左端的状态栏会显示其登入邮箱以及帐号角色类型###发布者使用说明- 发布者登录后即进入自己发布job的管理界面，分别列出了未完成和已完成的jobs，发布者可以对已经发布的job进行删除和修改，对未完成的job进行approve操作将其变为已完成状态。- 点击又上角的新建job按钮进入新建界面，填写job的名称、详细信息以及截止日期后，- 在此版本中，job创建后会自动将上传的文件平均分配给系统中所有的标注者。在改进版本中，发布者可以选择若干标注者来发布任务。- 在此版本中，管理员角色与发布者角色功能完全相同Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email.  As [John Gruber] writes on the [Markdown site] [1]:> The overriding design goal for Markdown's> formatting syntax is to make it as readable> as possible. The idea is that a> Markdown-formatted document should be> publishable as-is, as plain text, without> looking like it's been marked up with tags> or formatting instructions.This document is written in Markdown; you can see the plain-text version on the left.  To get a feel for Markdown's syntax, type some text into the left window and watch the results in the right.  You can see a Markdown syntax guide by switching the right-hand window from *Preview* to *Syntax Guide*.Showdown is a Javascript port of Markdown.  You can get the full [source code] by clicking on the version number at the bottom of the page.**Start with a [blank page] or edit this document in the left window.**  [john gruber]: http://daringfireball.net/  [1]: http://daringfireball.net/projects/markdown/  [source code]: http://www.attacklab.net/showdown-v0.9.zip  [blank page]: ?blank=1 "Clear all text"by Parano and Zicun,V
#,v
2',v
t,v
endor/rails/. This directory is in the load path.,V
== Welcome to RailsRails is a web-application framework that includes everything needed to createdatabase-backed web applications according to the Model-View-Control pattern.This pattern splits the view (also called the presentation) into "dumb"templates that are primarily responsible for inserting pre-built data in betweenHTML tags. The model contains the "smart" domain objects (such as Account,Product, Person, Post) that holds all the business logic and knows how topersist themselves to a database. The controller handles the incoming requests(such as Save New Account, Update Product, Show Post) by manipulating the modeland directing data to the view.In Rails, the model is handled by what's called an object-relational mappinglayer entitled Active Record. This layer allows you to present the data fromdatabase rows as objects and embellish these data objects with business logicmethods. You can read more about Active Record inlink:files/vendor/rails/activerecord/README.html.The controller and view are handled by the Action Pack, which handles bothlayers by its two parts: Action View and Action Controller. These two layersare bundled in a single package due to their heavy interdependence. This isunlike the relationship between the Active Record and Action Pack that is muchmore separate. Each of these packages can be used independently outside ofRails. You can read more about Action Pack inlink:files/vendor/rails/actionpack/README.html.== Getting Started1. At the command prompt, create a new Rails application:       <tt>rails new myapp</tt> (where <tt>myapp</tt> is the application name)2. Change directory to <tt>myapp</tt> and start the web server:       <tt>cd myapp; rails server</tt> (run with --help for options)3. Go to http://localhost:3000/ and you'll see:       "Welcome aboard: You're riding Ruby on Rails!"4. Follow the guidelines to start developing your application. You can findthe following resources handy:* The Getting Started Guide: http://guides.rubyonrails.org/getting_started.html* Ruby on Rails Tutorial Book: http://www.railstutorial.org/== Debugging RailsSometimes your application goes wrong. Fortunately there are a lot of tools thatwill help you debug it and get it back on the rails.First area to check is the application log files. Have "tail -f" commandsrunning on the server.log and development.log. Rails will automatically displaydebugging and runtime information to these files. Debugging info will also beshown in the browser on requests from 127.0.0.1.You can also log your own messages directly into the log file from your codeusing the Ruby logger class from inside your controllers. Example:  class WeblogController < ActionController::Base    def destroy      @weblog = Weblog.find(params[:id])      @weblog.destroy      logger.info("#{Time.now} Destroyed Weblog ID ##{@weblog.id}!")    end  endThe result will be a message in your log file along the lines of:  Mon Oct 08 14:22:29 +1000 2007 Destroyed Weblog ID #1!More information on how to use the logger is at http://www.ruby-doc.org/core/Also, Ruby documentation can be found at http://www.ruby-lang.org/. There areseveral books available online as well:* Programming Ruby: http://www.ruby-doc.org/docs/ProgrammingRuby/ (Pickaxe)* Learn to Program: http://pine.fm/LearnToProgram/ (a beginners guide)These two books will bring you up to speed on the Ruby language and also onprogramming in general.== DebuggerDebugger support is available through the debugger command when you start yourMongrel or WEBrick server with --debugger. This means that you can break out ofexecution at any point in the code, investigate and change the model, and then,resume execution! You need to install ruby-debug to run the server in debuggingmode. With gems, use <tt>sudo gem install ruby-debug</tt>. Example:  class WeblogController < ActionController::Base    def index      @posts = Post.all      debugger    end  endSo the controller will accept the action, run the first line, then present youwith a IRB prompt in the server window. Here you can do things like:  >> @posts.inspect  => "[#<Post:0x14a6be8          @attributes={"title"=>nil, "body"=>nil, "id"=>"1"}>,       #<Post:0x14a6620          @attributes={"title"=>"Rails", "body"=>"Only ten..", "id"=>"2"}>]"  >> @posts.first.title = "hello from a debugger"  => "hello from a debugger"...and even better, you can examine how your runtime objects actually work:  >> f = @posts.first  => #<Post:0x13630c4 @attributes={"title"=>nil, "body"=>nil, "id"=>"1"}>  >> f.  Display all 152 possibilities? (y or n)Finally, when you're ready to resume execution, you can enter "cont".== ConsoleThe console is a Ruby shell, which allows you to interact with yourapplication's domain model. Here you'll have all parts of the applicationconfigured, just like it is when the application is running. You can inspectdomain models, change values, and save to the database. Starting the scriptwithout arguments will launch it in the development environment.To start the console, run <tt>rails console</tt> from the applicationdirectory.Options:* Passing the <tt>-s, --sandbox</tt> argument will rollback any modifications  made to the database.* Passing an environment name as an argument will load the corresponding  environment. Example: <tt>rails console production</tt>.To reload your controllers and models after launching the console run<tt>reload!</tt>More information about irb can be found at:link:http://www.rubycentral.org/pickaxe/irb.html== dbconsoleYou can go to the command line of your database directly through <tt>railsdbconsole</tt>. You would be connected to the database with the credentialsdefined in database.yml. Starting the script without arguments will connect youto the development database. Passing an argument will connect you to a differentdatabase, like <tt>rails dbconsole production</tt>. Currently works for MySQL,PostgreSQL and SQLite 3.== Description of ContentsThe default directory structure of a generated Ruby on Rails application:  |-- app  |   |-- assets  |       |-- images  |       |-- javascripts  |       `-- stylesheets  |   |-- controllers  |   |-- helpers  |   |-- mailers  |   |-- models  |   `-- views  |       `-- layouts  |-- config  |   |-- environments  |   |-- initializers  |   `-- locales  |-- db  |-- doc  |-- lib  |   `-- tasks  |-- log  |-- public  |-- script  |-- test  |   |-- fixtures  |   |-- functional  |   |-- integration  |   |-- performance  |   `-- unit  |-- tmp  |   |-- cache  |   |-- pids  |   |-- sessions  |   `-- sockets  `-- vendor      |-- assets          `-- stylesheets      `-- pluginsapp  Holds all the code that's specific to this particular application.app/assets  Contains subdirectories for images, stylesheets, and JavaScript files.app/controllers  Holds controllers that should be named like weblogs_controller.rb for  automated URL mapping. All controllers should descend from  ApplicationController which itself descends from ActionController::Base.app/models  Holds models that should be named like post.rb. Models descend from  ActiveRecord::Base by default.app/views  Holds the template files for the view that should be named like  weblogs/index.html.erb for the WeblogsController#index action. All views use  eRuby syntax by default.app/views/layouts  Holds the template files for layouts to be used with views. This models the  common header/footer method of wrapping views. In your views, define a layout  using the <tt>layout :default</tt> and create a file named default.html.erb.  Inside default.html.erb, call <% yield %> to render the view using this  layout.app/helpers  Holds view helpers that should be named like weblogs_helper.rb. These are  generated for you automatically when using generators for controllers.  Helpers can be used to wrap functionality for your views into methods.config  Configuration files for the Rails environment, the routing map, the database,  and other dependencies.db  Contains the database schema in schema.rb. db/migrate contains all the  sequence of Migrations for your schema.doc  This directory is where your application documentation will be stored when  generated using <tt>rake doc:app</tt>lib  Application specific libraries. Basically, any kind of custom code that  doesn't belong under controllers, models, or helpers. This directory is in  the load path.public  The directory available for the web server. Also contains the dispatchers and the  default HTML files. This should be set as the DOCUMENT_ROOT of your web  server.script  Helper scripts for automation and generation.test  Unit and functional tests along with fixtures. When using the rails generate  command, template test files will be generated for you and placed in this  directory.vendor  External libraries that the application depends on. Also includes the plugins  subdirectory. If the app has frozen rails, those gems also go here, under  v,v
"4684266",v
2,v
  timeout: 5000,V
# rm,V
# rm,V
alias rm='rm -i',V
            s.split('|').uniq * '|',V
.split('|'),v
            end,V
            if s.split('|').include?(a[2]) == nil,V
                    e.attributes["desc"] = s,V
                s += "|#{a[2]}",V
  f.puts doc.to_s,V
  f = File.open("results.xml",'w'),V
    b = a.clone,V
},v
{,v
  doc = Document.new File.new "tour_treepath_area.xml",V
    if doc.elements["*/*/*/prov[@key='#{a[0]}']"] == nil      puts "#{a[0]} doesn't exist!"    elsif doc.elements["*/*/*/prov[@key='#{a[0]}']/area[@key='#{a[1]}']"] == nil      e = doc.elements["*/*/*/prov[@key='#{a[0]}']"]      e.add_element "area",{"key" => "#{a[1]}", "desc" => "#{a[2]}"}      #puts "add #{a[1]} ,#{a[2]}"    else      e = doc.elements["*/*/*/prov[@key='#{a[0]}']/area[@key='#{a[1]}']"]      s = e.attributes["desc"]      s += "|#{a[2]}"      e.attributes["desc"] = s      #puts "add #{a[2]} to #{a[1]}"    end,v
1.6.0,V
        puts "\t#{area}",V
    puts prov,V
  doc = Document.new File.new "results.xml",V
      puts a.attributes["key"],V
     e.attributes["key"],V
:,v
9,v
1,v
',v
北,v
0,v
    url = 'http://jingdian.tuniu.com/fengjing/'    regexp = /\<h1\>.*span\>/    regexp_jingdian = /\<h1\>(.*)\<\/h1\>/    regexp_jingdian1 = /title=\".*\"\>(.*)\<\/a\>\//    regexp_jingdian2 = /href=.*"\>(.*)\<\/a\>"/    regexp_title = /href=.*"\>(.*)\<\/a\>\/<a.*"\>(.*)\<\/a\>/ ,v
url = 'http://jingdian.tuniu.com/fengjing/'regexp = /\<h1\>.*span\>/regexp_jingdian = /\<h1\>(.*)\<\/h1\>/regexp_jingdian1 = /title=\".*\"\>(.*)\<\/a\>\//regexp_jingdian2 = /href=.*"\>(.*)\<\/a\>"/regexp_title = /href=.*"\>(.*)\<\/a\>\/<a.*"\>(.*)\<\/a\>/,v
@,v
x,v
def scrape(from,to,n)    file = File.open("data#{n}.txt","w+")    num = 1    for num in from..to        page = open(url + num.to_s)        text = page.read; nil        text = text.to_s.scan(regexp)        if( regexp_title =~ text.to_s )            print "#{n}:#{num.to_s}:#{$1},#{$2},"            file << "#{$1},#{$2},"        end        if( regexp_jingdian =~ text.to_s )            print "#{$1}\n"            file << "#{$1}\n"        end    end    file.closeend,v
),v
        group.add(,V
    group = TreadGroup.new,V
              scrape(tem_from, tem_to, n),V
              tem_from = 10376 + (n-1) * 1388,V
              tem_from = 10376 + (n-1) * 1388              tem_to = tem_from + 1388,V
  num = 1,V
    end,V
  file = File.open("data.txt","w+")  for num in 1..38144    page = open(url + num.to_s)    text = page.read; nil    text = text.to_s.scan(regexp)    if( regexp_title =~ text.to_s )      print "#{$1},#{$2},"      file << "#{$1},#{$2},"    end    if( regexp_jingdian =~ text.to_s )      print "#{$1}\n"      file << "#{$1}\n"    end  end  file.closee,v
  for num in 1..38144,V
require 'open-uri'if $0 == __FILE__      url = 'http://jingdian.tuniu.com/fengjing/'        num = 1          regexp = /\<h1\>.*span\>/end,V
require 'iconv',V
re 'uri',V
            regexp_jingdian = /\<h1\>(.*)\<\/h1\>/                  regexp_t,V
                regexp_jingdian2 = /href=.*"\>(.*)\<\/a\>"/,V
              regexp_jingdian1 = /title=\".*\"\>(.*)\<\/a\>\//,V
(,v
source ~/.bash/aliasessource ~/.bash/completionssource ~/.bash/pathssource ~/.bash/config# use .localrc for settings specific to one systemif [ -f ~/.localrc ]; then  source ~/.localrcfi,v
                <,V
<li class="award">                    <h3>全国大学生数学建模比赛</h3>                    <div class="date">2011年</div>                    <div class="organization" >省赛二等奖</div>                    <p class="description">  </p>                </li>                <,v
                </li>,V
                    <p class="description">为2人参赛</p>,V
                    <div class="organization" >三等奖</div>,V
                    <div class="date">2010年</div>,V
                    <h3>中山大学ACM校赛新手赛</h3>,V
                <li class="award">,V
日,v
3,v
月,v
<li class="award">                    <h3>经典论坛第一届样式表设计赛</h3>                    <div class="date">2004年9月13日</div>                    <div class="organization" >蓝色理想 经典论坛</div>                    <p class="description">终于得奖啦.</p>                </li>                <li class="award">                    <h3>经典论坛第一届样式表设计赛</h3>                    <div class="date">2004年9月13日</div>                    <div class="organization" >蓝色理想 经典论坛</div>                    <p class="description">终于得奖啦.</p>                </li>,v
        <li class="award">                    <h3>经典论坛第一届样式表设计赛</h3>                    <div class="date">2004年9月13日</div>                    <div class="organization" >蓝色理想 经典论坛</div>                    <p class="description">终于得奖啦.</p>                </li>         ,v
o,v
s,v
i,v
h,v
",v
